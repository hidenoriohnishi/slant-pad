// 縦書き/横書きでの記号マッピング
export const HORIZONTAL_TO_VERTICAL_CHAR_MAP: Record<string, string> = {
  // 半角括弧
  '(': '︵', // 左括弧
  ')': '︶', // 右括弧
  '[': '﹇', // 左角括弧
  ']': '﹈', // 右角括弧
  '{': '︷', // 左波括弧
  '}': '︸', // 右波括弧
  
  // 全角括弧
  '（': '︵', // 全角左括弧
  '）': '︶', // 全角右括弧
  '［': '﹇', // 全角左角括弧
  '］': '﹈', // 全角右角括弧
  '｛': '︷', // 全角左波括弧
  '｝': '︸', // 全角右波括弧
  '【': '︻', // 全角左二重角括弧
  '】': '︼', // 全角右二重角括弧
  '「': '﹁', // 全角左かぎ括弧
  '」': '﹂', // 全角右かぎ括弧
  '『': '﹃', // 全角左二重かぎ括弧
  '』': '﹄', // 全角右二重かぎ括弧
  
  // 横線系
  '-': '｜', // ハイフン→縦棒
  '—': '｜', // ダッシュ→縦棒
  '–': '｜', // エヌダッシュ→縦棒
  '―': '｜', // 水平バー→縦棒
  '～': '｜', // 波ダッシュ→縦棒
  '〜': '｜', // 全角チルダ→縦棒
  'ー': '｜', // 長音記号
  '－': '｜', // 全角マイナス
  
  // 句読点
  '、': '︑', // 読点
  '。': '︒', // 句点
  '，': '︐', // コンマ
  '．': '︙', // ピリオド
  '､': '︑', // 半角読点
  '｡': '︒', // 半角句点
  '？': '︖', // 疑問符
  '！': '︕', // 感嘆符
  '?': '︖', // 半角疑問符
  '!': '︕', // 半角感嘆符
  '…': '︙', // 三点リーダー
  '‥': '︰', // 二点リーダー
  ':': '︓', // コロン
  ';': '︔', // セミコロン
  '：': '︓', // 全角コロン
  '；': '︔', // 全角セミコロン
};

// 縦書きから横書きへの変換マップを作成
export const VERTICAL_TO_HORIZONTAL_CHAR_MAP: Record<string, string> = {};

// 初期化時に縦書き→横書きのマッピングを設定
Object.entries(HORIZONTAL_TO_VERTICAL_CHAR_MAP).forEach(([hChar, vChar]) => {
  VERTICAL_TO_HORIZONTAL_CHAR_MAP[vChar] = hChar;
}); 